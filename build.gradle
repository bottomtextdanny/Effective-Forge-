buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '[6.0,6.2)', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
repositories{
    maven {
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }

    maven {
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    maven {
        name "modrinth"
        url "https://api.modrinth.com/maven"
    }

    maven {
        url "https://www.cursemaven.com"
    }
    mavenCentral()
}
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.3.4'
group = 'bottomtextdanny'
archivesBaseName = 'effective_fg'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: "official", version: "1.20.1"

    runs {

        client {
            workingDirectory project.file('run')
            arg "-mixin.config=effective_fg.mixins.json"
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                effective_fg {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            arg "-mixin.config=effective_fg.mixins.json"
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                effective_fg {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file("run")
            arg "-mixin.config=effective_fg.mixins.json"
            property "forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP"
            property "forge.logging.console.level", "debug"
            mods {
                effective_fg {
                    source sourceSets.main
                }
            }
        }
    }
}

apply plugin: 'org.spongepowered.mixin'
mixin {
    add sourceSets.main, "effective_fg.mixins.refmap.json"
    config 'effective_fg.mixins.json'
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.1.47'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    compileOnly fg.deobf("maven.modrinth:rubidium:0.7.1")
    runtimeOnly fg.deobf("maven.modrinth:rubidium:0.7.1") //for testing
}

jar {
    manifest {
        attributes([
                "Specification-Title": "effective_fg",
                "Specification-Vendor": "bottomtextdanny",
                "Specification-Version": "1.3", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "1.3",
                "Implementation-Vendor" :"bottomtextdanny",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "effective_fg.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

wrapper {
    gradleVersion = '8.1.1'
    distributionType = Wrapper.DistributionType.BIN
}